NAME
    eBD::Process - Common eBD process functions

VERSION
    version 0.0.1

SYNOPSYS
      use eBD::Process;

      my $dbh = eBD::Process::open_dbh();

METHODS
  open_dbh
    Opens the DBH of the current eBD running. As it runs inside eBD, it
    finds the alias in the environment variable EBD_ALIAS.

    returns
    The dbh

    example
      my $dbh = eBD::Process::open_dbh();

INSTALLATION
  Operating System Perl
    If you are able to run a shell in your system. Install the library doing

      $ perl Makefile.PL
      $ make test
      $ sudo make install

  eBD perl
    If you want to run this process from eBD perl. You have to find out
    where it is, maybe something like ~ebdfas/system/bin/perl

      # ~ebdas/system/bin/perl Makefile.PL
      # make test
      # make install
 
    Now the script must run with eBD perl. One not bad way is running it
    from a shell:

       #!/bin/bash
       CMD=$EBD_SYSTEM/bin/perl
       FILENAME=`basename $0 .sh`
       exec $CMD $FILENAME.pl $@

    This may raise a security problem because bogus arguments can be passed
    to this shell and run by the eBD user. Also most of the eBD perl
    libraries are quite old and should not be upgraded. If you need to use
    some library you should install it in the OS perl, not the eBD perl.

  No way to install it
    Upload the .pm file and call it from your script like this:

      use lib '.';
      use eBD::Process;

